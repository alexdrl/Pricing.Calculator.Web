@using Models.Request;

<div class="card mb-3">
    <div class="card-header text-white @(ChargeConfiguration.Enabled ? "btn-primary" : "bg-secondary")">
        @ChargeConfiguration.Name
        <div class="float-right">
            <button class="btn btn-success pt-0 pb-0 ml-2" type="button" @onclick="() => ChargeConfiguration.Enabled = true">Enable</button>
            <button class="btn btn-warning pt-0 pb-0 ml-2" type="button" @onclick="() => ChargeConfiguration.Enabled = false">Disable</button>
            <button class="btn btn-danger pt-0 pb-0 ml-2" type="button" @onclick="() => OnClickDelete.InvokeAsync(ChargeConfiguration)"><span class="oi oi-trash"></span></button>
        </div>

    </div>
    <div class="card-body">
        <div class="row">
            
            <div class="col">
                <div class="form-group">
                    <label>Name</label>
                    <input type="text" class="form-control" @bind="ChargeConfiguration.Name" >
                </div>
            </div>
            
            <div class="col">
                <div class="form-group">
                    <label>Charge Type</label>
                    <InputSelect @bind-Value="ChargeConfiguration.ChargeType" class="form-control">
                        @foreach (var value in Enum.GetValues(typeof(ChargeType)))
                        {
                            <option value="@value">@value</option>
                        }
                    </InputSelect>
                </div>
            </div>
            
            @if (ChargeConfiguration.ChargeType == ChargeType.ValueBased || ChargeConfiguration.ChargeType == ChargeType.WeightBased)
            {
                <div class="col">
                    <div class="form-group">
                        <label>Rate</label>
                        <input type="text" class="form-control"  @bind="ChargeConfiguration.Rate">
                    </div>
                </div>
            }
            
            @if (ChargeConfiguration.ChargeType == ChargeType.Fixed)
            {
                <div class="col">
                    <div class="form-group">
                        <label>Value</label>
                        <input type="text" class="form-control"  @bind="ChargeConfiguration.FixedValue">
                    </div>
                </div>
            }
           
            <div class="col">
                <div class="form-group">
                    <label>Deminimis Threshold</label>
                    <input type="text" class="form-control" @bind="ChargeConfiguration.DeminimisThreshold">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <label>Deminimis Base Charges</label>
                    <select class="custom-select" multiple>
                        <option value="item" selected>Item</option>
                        <option value="delivery">Delivery</option>
                    </select>
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    <label>Base Charges</label>
                    <select class="custom-select" multiple>
                        <option value="item" selected>Item</option>
                        <option value="delivery">Delivery</option>
                        <option value="duty" selected>Duty</option>
                        <option value="vat">Vat</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
</div>


@code {

    [Parameter]
    public Models.Request.ChargeConfiguration ChargeConfiguration { get; set; } = new Models.Request.ChargeConfiguration();

    [Parameter] public EventCallback<ChargeConfiguration> OnClickDelete { get; set; }

}
