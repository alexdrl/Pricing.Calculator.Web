// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Pricing.Calculator.Web.App.ApiClients.CalculatorClient.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Charge configuration response DTO
    /// </summary>
    public partial class ChargeConfigurationResponseDto
    {
        /// <summary>
        /// Initializes a new instance of the
        /// ChargeConfigurationResponseDto
        /// class.
        /// </summary>
        public ChargeConfigurationResponseDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// ChargeConfigurationResponseDto
        /// class.
        /// </summary>
        /// <param name="name">Gets the name.</param>
        /// <param name="activeFrom">Gets the active from.</param>
        /// <param name="baseChargeNames">Gets the base charge names.</param>
        /// <param name="rate">Gets the rate.</param>
        public ChargeConfigurationResponseDto(string name = default(string), string chargeType = default(string), System.DateTime? activeFrom = default(System.DateTime?), DeminimisResponseDto deminimis = default(DeminimisResponseDto), IList<string> baseChargeNames = default(IList<string>), double? rate = default(double?), PriceResponseDto minimumPayable = default(PriceResponseDto), PriceResponseDto minimumCollectible = default(PriceResponseDto), PriceResponseDto excess = default(PriceResponseDto), PriceResponseDto maximumPayable = default(PriceResponseDto), PriceResponseDto fixedChargeAmount = default(PriceResponseDto))
        {
            Name = name;
            ChargeType = chargeType;
            ActiveFrom = activeFrom;
            Deminimis = deminimis;
            BaseChargeNames = baseChargeNames;
            Rate = rate;
            MinimumPayable = minimumPayable;
            MinimumCollectible = minimumCollectible;
            Excess = excess;
            MaximumPayable = maximumPayable;
            FixedChargeAmount = fixedChargeAmount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the name.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "chargeType")]
        public string ChargeType { get; set; }

        /// <summary>
        /// Gets the active from.
        /// </summary>
        [JsonProperty(PropertyName = "activeFrom")]
        public System.DateTime? ActiveFrom { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deminimis")]
        public DeminimisResponseDto Deminimis { get; set; }

        /// <summary>
        /// Gets the base charge names.
        /// </summary>
        [JsonProperty(PropertyName = "baseChargeNames")]
        public IList<string> BaseChargeNames { get; private set; }

        /// <summary>
        /// Gets the rate.
        /// </summary>
        [JsonProperty(PropertyName = "rate")]
        public double? Rate { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "minimumPayable")]
        public PriceResponseDto MinimumPayable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "minimumCollectible")]
        public PriceResponseDto MinimumCollectible { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "excess")]
        public PriceResponseDto Excess { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "maximumPayable")]
        public PriceResponseDto MaximumPayable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fixedChargeAmount")]
        public PriceResponseDto FixedChargeAmount { get; set; }

    }
}
